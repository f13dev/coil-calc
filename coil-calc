#!/bin/bash

CSV="coils.csv"

# Check if values are numeric 
# This function will exit if the input does not follow the rules
# null
# numeric 
# numeric . numeric
validateNumber ()
{
	if [ -z "$1" ]
	then 
		return 0
	elif ! [[ "$1" =~ ^[0-9]+$ ]] && ! [[ "$1" =~ ^[-+]?[0-9]+\.?[0-9]*$ ]] ; 
	then
		echo -n "Error: '$1' is not a number, "
		return 0
	else
		return 1
	fi
}

echo "Select a wire by entering it's corresponding number"
echo ""

# List wire types from CSV
LINE=0
while read p; do
    LINE=$(( $LINE + 1 ))
    IFS=, arr=($p)
    echo "${LINE}) ${arr[0]} (${arr[1]}AWG)"
done <$CSV

echo "Enter wire number?"
read -r WIRENO

# Get the selected wire 
IFS=, WIRE=($(sed -n ${WIRENO}p $CSV))

# Confirm the selected wire
echo ""
echo "You have selected: ${WIRE[0]} (${WIRE[1]}AWG) @ ${WIRE[2]} Ohms per inch"

# Get the coil jig diameter
echo ""
echo "What is the diameter of your coil jig in mm (Default 3mm)?"
read -r DIAMETER

# Check the input 
validateNumber $DIAMETER
if [[ $? -eq 0 ]];
then 
	DIAMETER=3
	echo "setting the coil jig diameter to the default of 3 mm"
fi
echo "The coil jig diameter is $DIAMETER mm"

# Get the coil lead length
echo ""
echo "What is the lead length between the coil and atomiser in mm (Default: 5mm)?"
read -r LEAD

# Check the input
validateNumber $LEAD
if [[ $? -eq 0 ]];
then 
	LEAD=5
	echo "setting the lead length to the defult of 5 mm"
fi
echo "The lead length is $LEAD mm"

# Get the desired resistance
echo ""
echo "What is the desired resistance of each coil (Default 1 ohm)?"
read -r RESISTANCE

# Check the input 
validateNumber $RESISTANCE
if [[ $? -eq 0 ]];
then
	RESISTANCE=1
	echo "setting the resistance to the default of 1 ohm"
fi
echo "The resistnace is $RESISTANCE ohm"