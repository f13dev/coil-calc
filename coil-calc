#!/bin/bash

# Constants
CSV="coils.csv"
PI=3.1415926535

for i in "$@"
do
case $i in
	# Get value for volts (V)
	-w=*|--wire=*)
	WIRENO="${i#*=}"
	shift
	;;

	# Get value for ohms (R)
	-r=*|--resistance=*)
	RESISTANCE="${i#*=}"
	shift
	;;

	# Get value for watts (P)
	-d=*|--diameter=*)
	DIAMETER="${i#*=}"
	shift
	;;

	# GET value for amps (I)
	-l=*|--lead=*)
	LEAD="${i#*=}"
	shift
	;;

	# unrecognised
	*)
	;;
esac
done

# Check if values are numeric 
# This function will exit if the input does not follow the rules
# null
# numeric 
# numeric . numeric
validateNumber ()
{
	if [ -z "$1" ]
	then 
		return 0
	elif ! [[ "$1" =~ ^[0-9]+$ ]] && ! [[ "$1" =~ ^[-+]?[0-9]+\.?[0-9]*$ ]] ; 
	then
		echo -n "Error: '$1' is not a number, "
		return 0
	else
		return 1
	fi
}

# Check if a wire number has been passed to the script
if [ -z "$WIRENO" ];
then

	echo "Select a wire by entering it's corresponding number"
	echo ""

	# List wire types from CSV
	LINE=0
	while read p; do
		LINE=$(( $LINE + 1 ))
		IFS=, arr=($p)
		echo "${LINE}) ${arr[0]} (${arr[1]}AWG)"
	done <$CSV

	echo "Enter wire number?"
	read -r WIRENO

	# Get the selected wire 
	IFS=, WIRE=($(sed -n ${WIRENO}p $CSV))

	# Confirm the selected wire
	echo ""
	echo "You have selected: ${WIRE[0]} (${WIRE[1]}AWG) @ ${WIRE[2]} Ohms per inch"

	# Get the coil jig diameter
	echo ""
	echo "What is the diameter of your coil jig in mm (Default 3mm)?"
	read -r DIAMETER

	# Check the input 
	validateNumber $DIAMETER
	if [[ $? -eq 0 ]];
	then 
		DIAMETER=3
		echo "setting the coil jig diameter to the default of 3 mm"
	fi
	echo "The coil jig diameter is $DIAMETER mm"

	# Get the coil lead length
	echo ""
	echo "What is the lead length between the coil and atomiser in mm (Default: 5mm)?"
	read -r LEAD

	# Check the input
	validateNumber $LEAD
	if [[ $? -eq 0 ]];
	then 
		LEAD=5
		echo "setting the lead length to the defult of 5 mm"
	fi
	echo "The lead length is $LEAD mm"

	# Get the desired resistance
	echo ""
	echo "What is the desired resistance of each coil (Default 1 ohm)?"
	read -r RESISTANCE

	# Check the input 
	validateNumber $RESISTANCE
	if [[ $? -eq 0 ]];
	then
		RESISTANCE=1
		echo "setting the resistance to the default of 1 ohm"
	fi
	echo "The resistnace is $RESISTANCE ohm"
else
	# Get the selected wire 
	IFS=, WIRE=($(sed -n ${WIRENO}p $CSV))
	
	# Check the other variables
	
	# Check the input 
	validateNumber $DIAMETER
	if [[ $? -eq 0 ]];
	then 
		DIAMETER=3
		echo "setting the coil jig diameter to the default of 3 mm"
	fi
	
	# Check the input
	validateNumber $LEAD
	if [[ $? -eq 0 ]];
	then 
		LEAD=5
		echo "setting the lead length to the defult of 5 mm"
	fi
	
	# Check the input 
	validateNumber $RESISTANCE
	if [[ $? -eq 0 ]];
	then
		RESISTANCE=1
		echo "setting the resistance to the default of 1 ohm"
	fi
fi

# All inputs are gathered:
#	WIRE[1] 	= 	AWG
#	WIRE[2] 	= 	Ohms per inch
#	DIAMETER 	= 	Jig diameter 
#	LEAD 		= 	Coil lead length
#	RESISTANCE 	= 	Desired resistance per coil

# Work out the total length of the wire in mm
LENGTH=$(bc -l <<< "scale=10;($RESISTANCE/(${WIRE[2]}/25.4))")

# Work out the length of the coil part of the wire in mm
COILLENGTH=$(bc -l <<< "scale=10;($LENGTH-($LEAD*2))")

# Work out the circumfrence of each turn
CIRCUMFRENCE=$(bc -l <<< "scale=10;($PI*$DIAMETER)")

# Work out the number of turns required to get the requested resistance
TURNS=$(bc -l <<< "scale=2;($COILLENGTH/$CIRCUMFRENCE)")

# Round the number of coils to the nearest int 
ROUNDEDTURNS=$(bc -l <<< "scale=0;($TURNS+0.5)/1")

# Work out the length of the rounded resistance wire 
ROUNDEDLENGTH=$(bc -l <<< "scale=2;($ROUNDEDTURNS*$CIRCUMFRENCE+($LEAD*2))")

# Work out the resistance of the rounded number of turns
ROUNDEDOHMS=$(bc -l <<< "scale=2;($ROUNDEDLENGTH*(${WIRE[2]}/24.5))/1")

# Clarify all of the input parameters
echo ""
echo "-- Requested coil perameters --"
echo "Wire:		${WIRE[0]} (${WIRE[1]}AWG)"
echo "Jig diameter:	$DIAMETER mm"
echo "Resistance:	$RESISTANCE ohm"

# Notify the user of the exact requested coil perameters
echo ""
echo "-- Exact results for $RESISTANCE ohm --"
echo "Wire length:	$LENGTH mm"
echo "Turns:		$TURNS"

# Notify the user of the rounded coil perameters
echo ""
echo "-- Results of rounding to the nearest turn --"
echo "Wire length:	$ROUNDEDLENGTH mm"
echo "Turns:		$ROUNDEDTURNS"
echo "Resistance:	$ROUNDEDOHMS ohm"
